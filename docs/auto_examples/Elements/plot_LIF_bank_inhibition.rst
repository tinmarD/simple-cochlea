

.. _sphx_glr_auto_examples_Elements_plot_LIF_bank_inhibition.py:


=======================================
   LIB Bank with lateral Inhibition
=======================================

Analysis of the implementation of the neural inhibition described in [1]. These different types of connection are
supposed to produce contrast enhancement, i.e. for the cochlea it can lead to a sharpening of its frequency sensitivity.

Four types of inhibition are described :
 * Forward-subtractive inhibition
 * Backward-subtractive inhibition
 * Forward-shunting inhibition
 * Backward-shunting inhibition


References
----------

.. [1] Gershon G. Furman and Lawrence S. Frishkopf. Model of Neural Inhibition in the Mammalian Cochlea.
       The Journal of the Acoustical Society of America 1964 36:11, 2194-2201




.. code-block:: python


    import numpy as np
    from simplecochlea import Cochlea
    from simplecochlea import generate_signals






.. code-block:: pytb

    Traceback (most recent call last):
      File "C:\Users\deudon\Desktop\M4\_Scripts\_Python\simpleCochlea\examples\Elements\plot_LIF_bank_inhibition.py", line 25, in <module>
        from simplecochlea import Cochlea
      File "C:\Users\deudon\AppData\Local\Continuum\Anaconda3\lib\site-packages\simplecochlea-0.1.13-py3.6-win-amd64.egg\simplecochlea\__init__.py", line 3, in <module>
        from .cochlea import Cochlea, CochleaEstimator, load_cochlea
      File "C:\Users\deudon\AppData\Local\Continuum\Anaconda3\lib\site-packages\simplecochlea-0.1.13-py3.6-win-amd64.egg\simplecochlea\cochlea.py", line 15, in <module>
        from .generate_signals import *
      File "C:\Users\deudon\AppData\Local\Continuum\Anaconda3\lib\site-packages\simplecochlea-0.1.13-py3.6-win-amd64.egg\simplecochlea\generate_signals.py", line 8, in <module>
        from .utils import utils_cochlea
    ModuleNotFoundError: No module named 'simplecochlea.utils'




For testing the inhibition, we will use a signal composed of 3 sinusoids close in frequency



.. code-block:: python

    fs = 44100
    test_sig = generate_signals.generate_sinus(fs, f_sin=[1500, 2000, 2100], t_offset=[0.15, 0.1, 0.2], t_max=1)
    generate_signals.plot_signal(test_sig, fs)



Construct the cochlea :



.. code-block:: python

    fmin, fmax, freq_scale, n_channels = 200, 8000, 'erbscale', 1000
    comp_factor, comp_gain = 0.3, 1.5
    tau, v_thresh, v_spike = np.linspace(0.001, 0.0004, n_channels), np.linspace(0.3, 0.17, n_channels), 0.5

    cochlea = Cochlea(n_channels, fs, fmin, fmax, freq_scale, comp_factor=comp_factor, comp_gain=comp_gain,
                      lif_tau=tau, lif_v_thresh=v_thresh, lif_v_spike=v_spike)





**Total running time of the script:** ( 0 minutes  0.000 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_LIF_bank_inhibition.py <plot_LIF_bank_inhibition.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_LIF_bank_inhibition.ipynb <plot_LIF_bank_inhibition.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
